{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","addSelected","element","includes","setState","deleteSelected","filter","goods","clearSelected","renderTitle","titleStr","length","slice","join","this","className","type","onClick","map","selected","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA6GaC,E,4MAzGbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,YAAc,SAACC,GACT,EAAKH,MAAMC,cAAcG,SAASD,IAItC,EAAKE,UAAS,gBAAGJ,EAAH,EAAGA,cAAH,MAAwB,CACpCA,cAAc,GAAD,mBAAMA,GAAN,CAAqBE,S,EAItCG,eAAiB,SAACH,GAChB,EAAKE,UAAS,kBAAwB,CACpCJ,cADY,EAAGA,cACcM,QAAO,SAAAC,GAAK,OAAIA,IAAUL,U,EAI3DM,cAAgB,WACd,EAAKJ,SAAS,CAAEJ,cAAe,M,EAGjCS,YAAc,WACZ,IAAIC,EAAW,GACPV,EAAkB,EAAKD,MAAvBC,cAgBR,OAd6B,IAAzBA,EAAcW,SAChBD,EAAQ,UAAMV,EAAN,gBAGNA,EAAcW,OAAS,IACzBD,GAAQ,UAAOV,EAAcY,MAAM,GAAI,GAAGC,KAAK,MAAvC,uBACFb,EAAcA,EAAcW,OAAS,GADnC,yBAKmB,IAAzBX,EAAcW,SAChBD,EAAW,qBAGNA,G,4CAGT,WAAU,IAAD,OACCV,EAAkBc,KAAKf,MAAvBC,cAER,OACE,yBAAKe,UAAU,WACb,wBAAIA,UAAU,SACXD,KAAKL,cACLT,EAAcW,OAAS,EAEpB,4BACEI,UAAU,cACVC,KAAK,SACLC,QAAS,kBAAM,EAAKT,kBAHtB,SAQA,MAIN,wBAAIO,UAAU,aACXlB,EAAgBqB,KAAI,SAAChB,GACpB,IAAMiB,EAAWnB,EAAcG,SAASD,GAExC,OACE,wBACEkB,IAAKlB,EACLa,UAAWI,EAAW,SAAW,UAEhCjB,EACAiB,EAEG,4BACEJ,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAM,EAAKZ,eAAeH,KAHrC,KASA,4BACEa,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAM,EAAKhB,YAAYC,KAHlC,e,GAxFFmB,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.fbc4a401.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  addSelected = (element) => {\n    if (this.state.selectedGoods.includes(element)) {\n      return;\n    }\n\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: [...selectedGoods, element],\n    }));\n  };\n\n  deleteSelected = (element) => {\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: selectedGoods.filter(goods => goods !== element),\n    }));\n  };\n\n  clearSelected = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  renderTitle = () => {\n    let titleStr = '';\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.length === 1) {\n      titleStr = `${selectedGoods} is sellect`;\n    }\n\n    if (selectedGoods.length > 1) {\n      titleStr += `${selectedGoods.slice(0, -1).join(', ')}\n      and ${selectedGoods[selectedGoods.length - 1]}\n      are selected`;\n    }\n\n    if (selectedGoods.length === 0) {\n      titleStr = 'No goods selected';\n    }\n\n    return titleStr;\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"wrapper\">\n        <h1 className=\"title\">\n          {this.renderTitle()}\n          {selectedGoods.length > 0\n            ? (\n              <button\n                className=\"clearButton\"\n                type=\"button\"\n                onClick={() => this.clearSelected()}\n              >\n                Clear\n              </button>\n            )\n            : null\n          }\n        </h1>\n\n        <ul className=\"goodsList\">\n          {goodsFromServer.map((element) => {\n            const selected = selectedGoods.includes(element);\n\n            return (\n              <li\n                key={element}\n                className={selected ? 'active' : 'normal'}\n              >\n                {element}\n                {selected\n                  ? (\n                    <button\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => this.deleteSelected(element)}\n                    >\n                      X\n                    </button>\n                  )\n                  : (\n                    <button\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => this.addSelected(element)}\n                    >\n                      +\n                    </button>\n                  )\n                }\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}